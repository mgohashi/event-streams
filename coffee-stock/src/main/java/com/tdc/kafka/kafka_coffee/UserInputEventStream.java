package com.tdc.kafka.kafka_coffee;

import io.reactivex.Completable;
import io.vertx.reactivex.core.AbstractVerticle;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import static com.tdc.kafka.kafka_coffee.RepositoryVerticle.REFILL_STOCK_QUEUE;

/**
 * Simulate Events Generated by User Input
 */
@SuppressWarnings({"ResultOfMethodCallIgnored", "BigDecimalMethodWithoutRoundingCalled"})
public class UserInputEventStream extends AbstractVerticle {

    private static final Logger LOG = LoggerFactory.getLogger(UserInputEventStream.class);
    private static final int EVENT_PERIOD_IN_MILLISECONDS = 15000;

    @Override
    public Completable rxStart() {
        //Creating periodic stream to generate events
        vertx.periodicStream(EVENT_PERIOD_IN_MILLISECONDS).toFlowable()
                .subscribe(
                        timeout -> vertx.eventBus().rxSend(REFILL_STOCK_QUEUE, "REFILL")
                                .subscribe(reply -> {
                                    LOG.info("Stock refill check executed!");
                                }, error -> LOG.error(error.getMessage(), error)));

        return Completable.complete();
    }


}
